//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: Ui_FileCopySettings_Dialog.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "Ui_FileCopySettings_Dialog.hpp"


// Declare the bitmap loading function
extern void wxCrafterJogQPpInitBitmapResources();

static bool bBitmapLoaded = false;


Ui_FileCopySettingsDialog::Ui_FileCopySettingsDialog(wxWindow *parent, wxWindowID id, const wxString &title, const wxPoint &pos, const wxSize &size, long style)
    : wxDialog(parent, id, title, pos, size, style) {
    if (!bBitmapLoaded) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterJogQPpInitBitmapResources();
        bBitmapLoaded = true;
    }

    wxBoxSizer *sizerFileCopySettingsDialog = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(sizerFileCopySettingsDialog);

    panelDefaultUserNumber = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL | wxBORDER_THEME);

    sizerFileCopySettingsDialog->Add(panelDefaultUserNumber, 0, wxALL | wxEXPAND, WXC_FROM_DIP(4));

    wxBoxSizer *sizerDefaultUserNumber = new wxBoxSizer(wxHORIZONTAL);
    panelDefaultUserNumber->SetSizer(sizerDefaultUserNumber);

    textDefaultUserNumber = new wxStaticText(panelDefaultUserNumber, wxID_ANY, _("Default User Number for copy operations :"), wxDefaultPosition, wxDLG_UNIT(panelDefaultUserNumber, wxSize(-1, -1)), 0);

    sizerDefaultUserNumber->Add(textDefaultUserNumber, 0, wxALL | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(4));

    spinCtrlDefaultUserNumber = new wxSpinCtrl(panelDefaultUserNumber, wxID_ANY, wxT("0"), wxDefaultPosition, wxDLG_UNIT(panelDefaultUserNumber, wxSize(-1, -1)), wxSP_ARROW_KEYS | wxBORDER_THEME);
    spinCtrlDefaultUserNumber->SetRange(0, 15);
    spinCtrlDefaultUserNumber->SetValue(0);

    sizerDefaultUserNumber->Add(spinCtrlDefaultUserNumber, 0, wxTOP | wxBOTTOM | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(4));

    panelTextfileEndings = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL | wxBORDER_THEME);

    sizerFileCopySettingsDialog->Add(panelTextfileEndings, 1, wxALL | wxEXPAND, WXC_FROM_DIP(4));

    wxBoxSizer *sizerTextFileEndings = new wxBoxSizer(wxVERTICAL);
    panelTextfileEndings->SetSizer(sizerTextFileEndings);

    labelTextFileEndings = new wxStaticText(panelTextfileEndings, wxID_ANY, _("Space separated List of Textfile Endings to be converted during copy operations."), wxDefaultPosition, wxDLG_UNIT(panelTextfileEndings, wxSize(-1, -1)), wxST_NO_AUTORESIZE | wxALIGN_LEFT);

    sizerTextFileEndings->Add(labelTextFileEndings, 0, wxALL, WXC_FROM_DIP(4));

    editTextFileEndings = new wxTextCtrl(panelTextfileEndings, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelTextfileEndings, wxSize(-1, -1)), wxTE_WORDWRAP | wxTE_MULTILINE | wxBORDER_THEME);

    sizerTextFileEndings->Add(editTextFileEndings, 1, wxALL | wxEXPAND, WXC_FROM_DIP(4));

    SetName(wxT("Ui_FileCopySettingsDialog"));
    SetSize(wxDLG_UNIT(this, wxSize(-1, -1)));

    if (GetSizer()) {
        GetSizer()->Fit(this);
    }

    if (GetParent()) {
        CentreOnParent(wxBOTH);
    }
    else {
        CentreOnScreen(wxBOTH);
    }
}

Ui_FileCopySettingsDialog::~Ui_FileCopySettingsDialog() {
}
