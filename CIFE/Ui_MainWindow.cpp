//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: Ui_MainWindow.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "Ui_MainWindow.h"


// Declare the bitmap loading function
extern void wxCrafterbA4dhxInitBitmapResources();

static bool bBitmapLoaded = false;


Ui_MainWindow::Ui_MainWindow(wxWindow *parent, wxWindowID id, const wxString &title, const wxPoint &pos, const wxSize &size, long style)
    : wxFrame(parent, id, title, pos, size, style) {
    if (!bBitmapLoaded) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterbA4dhxInitBitmapResources();
        bBitmapLoaded = true;
    }

    menuMainWindow = new wxMenuBar(0);
    this->SetMenuBar(menuMainWindow);

    menuFile = new wxMenu();
    menuMainWindow->Append(menuFile, _("File"));

    menuItemClose = new wxMenuItem(menuFile, wxID_CLOSE, _("Close"), wxT(""), wxITEM_NORMAL);
    menuFile->Append(menuItemClose);

    menuHelp = new wxMenu();
    menuMainWindow->Append(menuHelp, _("Help"));

    menuItemAbout = new wxMenuItem(menuHelp, wxID_ABOUT, _("About ..."), wxT(""), wxITEM_NORMAL);
    menuHelp->Append(menuItemAbout);

    statusMainWindow = new wxStatusBar(this, wxID_ANY, wxSTB_DEFAULT_STYLE);
    statusMainWindow->SetFieldsCount(1);
    this->SetStatusBar(statusMainWindow);

    sizerMainWindow = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(sizerMainWindow);

    panelImageFile = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL);

    sizerMainWindow->Add(panelImageFile, 0, wxEXPAND, WXC_FROM_DIP(4));

    sizerImage = new wxGridBagSizer(0, 0);
    panelImageFile->SetSizer(sizerImage);

    textImageType = new wxStaticText(panelImageFile, wxID_ANY, _("Image Typ :"), wxDefaultPosition, wxDLG_UNIT(panelImageFile, wxSize(-1, -1)), 0);

    sizerImage->Add(textImageType, wxGBPosition(0, 0), wxGBSpan(1, 1), wxLEFT | wxRIGHT | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(4));

    sizerImageType = new wxBoxSizer(wxHORIZONTAL);

    sizerImage->Add(sizerImageType, wxGBPosition(0, 1), wxGBSpan(1, 1), wxTOP | wxBOTTOM, WXC_FROM_DIP(4));

    wxArrayString comboboxImageTypeArr;
    comboboxImageType = new wxComboBox(panelImageFile, wxID_IMAGE_TYPE, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelImageFile, wxSize(-1, -1)), comboboxImageTypeArr, wxCB_READONLY);

    sizerImageType->Add(comboboxImageType, 0, 0, WXC_FROM_DIP(4));

    sizerImageType->Add(-1, -1, 0, 0, WXC_FROM_DIP(5));

    textImageFile = new wxStaticText(panelImageFile, wxID_ANY, _("Image Datei :"), wxDefaultPosition, wxDLG_UNIT(panelImageFile, wxSize(-1, -1)), 0);

    sizerImage->Add(textImageFile, wxGBPosition(1, 0), wxGBSpan(1, 1), wxLEFT | wxRIGHT | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(4));

    editImageFile = new wxTextCtrl(panelImageFile, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelImageFile, wxSize(-1, -1)), 0);
#if wxVERSION_NUMBER >= 3000
    editImageFile->SetHint(wxT(""));
#endif

    sizerImage->Add(editImageFile, wxGBPosition(1, 1), wxGBSpan(1, 1), wxRIGHT | wxBOTTOM | wxEXPAND, WXC_FROM_DIP(2));

    buttonImageFile = new wxButton(panelImageFile, wxID_BUTTON_IMAGE_FILE, _("..."), wxDefaultPosition, wxDLG_UNIT(panelImageFile, wxSize(-1, -1)), 0);

    sizerImage->Add(buttonImageFile, wxGBPosition(1, 2), wxGBSpan(1, 1), wxRIGHT, WXC_FROM_DIP(4));
    sizerImage->AddGrowableCol(1);
    panelImageViews = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxBORDER_NONE);

    sizerMainWindow->Add(panelImageViews, 1, wxEXPAND, WXC_FROM_DIP(5));

    sizerImageViews = new wxBoxSizer(wxVERTICAL);
    panelImageViews->SetSizer(sizerImageViews);

    panelDirViewType = new wxPanel(panelImageViews, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelImageViews, wxSize(-1, -1)), wxTAB_TRAVERSAL);

    sizerImageViews->Add(panelDirViewType, 0, wxLEFT | wxTOP | wxEXPAND, WXC_FROM_DIP(4));

    sizerDirViewType = new wxBoxSizer(wxHORIZONTAL);
    panelDirViewType->SetSizer(sizerDirViewType);

    textDirViewType = new wxStaticText(panelDirViewType, wxID_ANY, _("Directory View Type :"), wxDefaultPosition, wxDLG_UNIT(panelDirViewType, wxSize(-1, -1)), 0);

    sizerDirViewType->Add(textDirViewType, 0, wxRIGHT | wxTOP | wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(4));

    wxArrayString comboboxDirViewTypeArr;
    comboboxDirViewTypeArr.Add(_("Old CP/M 2.2 dir output."));
    comboboxDirViewTypeArr.Add(_("P2DOS 2.3 ddir-like output."));
    comboboxDirViewTypeArr.Add(_("CP/M 3.x dir output."));
    comboboxDirViewTypeArr.Add(_("Long UNIX-style dir output."));
    comboboxDirViewTypeArr.Add(_("E2fs lsattr-like output."));
    comboboxDirViewType = new wxComboBox(panelDirViewType, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(panelDirViewType, wxSize(-1, -1)), comboboxDirViewTypeArr, 0);
#if wxVERSION_NUMBER >= 3000
    comboboxDirViewType->SetHint(wxT(""));
#endif
    comboboxDirViewType->SetSelection(0);

    sizerDirViewType->Add(comboboxDirViewType, 0, wxTOP, WXC_FROM_DIP(4));

    sizerDirViewType->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));

    buttonUpdateDir = new wxButton(panelDirViewType, wxID_BUTTON_UPDATE_DIR, _("Update Directory View"), wxDefaultPosition, wxDLG_UNIT(panelDirViewType, wxSize(-1, -1)), 0);

    sizerDirViewType->Add(buttonUpdateDir, 0, wxRIGHT | wxTOP | wxEXPAND | wxRESERVE_SPACE_EVEN_IF_HIDDEN, WXC_FROM_DIP(4));

    splitterImageViews = new wxSplitterWindow(panelImageViews, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(panelImageViews, wxSize(-1, -1)), wxSP_LIVE_UPDATE | wxSP_NOBORDER);
    splitterImageViews->SetSashGravity(1);
    splitterImageViews->SetMinimumPaneSize(100);

    sizerImageViews->Add(splitterImageViews, 1, wxLEFT | wxRIGHT | wxTOP | wxEXPAND, WXC_FROM_DIP(4));

    splitterPageImageContents = new wxPanel(splitterImageViews, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(splitterImageViews, wxSize(-1, -1)), wxTAB_TRAVERSAL | wxBORDER_THEME);

    sizerImageContents = new wxBoxSizer(wxVERTICAL);
    splitterPageImageContents->SetSizer(sizerImageContents);

    listImageContents = new wxListView(splitterPageImageContents, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(splitterPageImageContents, wxSize(-1, -1)), wxLC_VRULES | wxLC_REPORT | wxFULL_REPAINT_ON_RESIZE | wxBORDER_NONE);
    listImageContents->SetBackgroundColour(wxColour(wxT("rgb(203,230,162)")));

    sizerImageContents->Add(listImageContents, 2, wxEXPAND, WXC_FROM_DIP(4));

    lineImageContents = new wxStaticLine(splitterPageImageContents, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(splitterPageImageContents, wxSize(1, 1)), wxLI_HORIZONTAL);

    sizerImageContents->Add(lineImageContents, 0, wxEXPAND, WXC_FROM_DIP(5));
    lineImageContents->SetMinSize(wxSize(1, 1));

    textContentsInfo = new wxStaticText(splitterPageImageContents, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(splitterPageImageContents, wxSize(-1, -1)), wxALIGN_LEFT | wxBORDER_NONE);

    sizerImageContents->Add(textContentsInfo, 0, wxBOTTOM | wxEXPAND, WXC_FROM_DIP(5));

    splitterPageMessages = new wxPanel(splitterImageViews, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(splitterImageViews, wxSize(-1, -1)), wxTAB_TRAVERSAL | wxBORDER_THEME);
    splitterImageViews->SplitHorizontally(splitterPageImageContents, splitterPageMessages, 100);

    sizerMessages = new wxBoxSizer(wxVERTICAL);
    splitterPageMessages->SetSizer(sizerMessages);

    sizerMessagesControl = new wxBoxSizer(wxHORIZONTAL);

    sizerMessages->Add(sizerMessagesControl, 0, wxLEFT | wxRIGHT | wxTOP | wxEXPAND, WXC_FROM_DIP(4));

    buttonClearMessages = new wxButton(splitterPageMessages, wxID_BUTTON_CLEAR_MESSAGES, _("Clear Messages"), wxDefaultPosition, wxDLG_UNIT(splitterPageMessages, wxSize(-1, -1)), 0);

    sizerMessagesControl->Add(buttonClearMessages, 0, 0, WXC_FROM_DIP(5));

    sizerMessagesControl->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));

    buttonSaveMessages = new wxButton(splitterPageMessages, wxID_BUTTON_SAVE_MESSAGES, _("SaveMessages"), wxDefaultPosition, wxDLG_UNIT(splitterPageMessages, wxSize(-1, -1)), 0);

    sizerMessagesControl->Add(buttonSaveMessages, 0, 0, WXC_FROM_DIP(5));

    lineTextMessages = new wxStaticLine(splitterPageMessages, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(splitterPageMessages, wxSize(-1, 1)), wxLI_HORIZONTAL | wxBORDER_NONE);

    sizerMessages->Add(lineTextMessages, 0, wxTOP | wxEXPAND, WXC_FROM_DIP(5));
    lineTextMessages->SetMinSize(wxSize(-1, 1));

    textMessages = new wxTextCtrl(splitterPageMessages, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(splitterPageMessages, wxSize(-1, -1)), wxTE_RICH2 | wxTE_READONLY | wxTE_MULTILINE | wxTE_DONTWRAP | wxBORDER_NONE | wxBORDER_THEME);

    sizerMessages->Add(textMessages, 1, wxEXPAND, WXC_FROM_DIP(5));

    SetName(wxT("Ui_MainWindow"));
    SetSize(wxDLG_UNIT(this, wxSize(640, 480)));

    if (GetSizer()) {
        GetSizer()->Fit(this);
    }

    if (GetParent()) {
        CentreOnParent(wxBOTH);
    }
    else {
        CentreOnScreen(wxBOTH);
    }
}

Ui_MainWindow::~Ui_MainWindow() {
}
