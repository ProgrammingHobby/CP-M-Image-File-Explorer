//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: Ui_FileProtectionsDialog.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "Ui_FileProtectionsDialog.hpp"


// Declare the bitmap loading function
extern void wxCrafterVUihCqInitBitmapResources();

static bool bBitmapLoaded = false;


Ui_FileProtectionsDialog::Ui_FileProtectionsDialog(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterVUihCqInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* sizerFileProtectionsDialog = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(sizerFileProtectionsDialog);
    
    panelFileProtections = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    sizerFileProtectionsDialog->Add(panelFileProtections, 0, wxALL, WXC_FROM_DIP(4));
    
    wxBoxSizer* sizerFileProtections = new wxBoxSizer(wxVERTICAL);
    panelFileProtections->SetSizer(sizerFileProtections);
    
    checkboxReadProtect = new wxCheckBox(panelFileProtections, wxID_READ_PROTECT, _("read Protect"), wxDefaultPosition, wxDLG_UNIT(panelFileProtections, wxSize(-1,-1)), 0);
    checkboxReadProtect->SetValue(false);
    
    sizerFileProtections->Add(checkboxReadProtect, 0, wxLEFT, WXC_FROM_DIP(4));
    
    checkboxWriteProtect = new wxCheckBox(panelFileProtections, wxID_WRITE_PROTECT, _("write Protect"), wxDefaultPosition, wxDLG_UNIT(panelFileProtections, wxSize(-1,-1)), 0);
    checkboxWriteProtect->SetValue(false);
    
    sizerFileProtections->Add(checkboxWriteProtect, 0, wxLEFT, WXC_FROM_DIP(4));
    
    checkboxDeleteProtect = new wxCheckBox(panelFileProtections, wxID_DELETE_PROTECT, _("delete Protect"), wxDefaultPosition, wxDLG_UNIT(panelFileProtections, wxSize(-1,-1)), 0);
    checkboxDeleteProtect->SetValue(false);
    
    sizerFileProtections->Add(checkboxDeleteProtect, 0, wxLEFT, WXC_FROM_DIP(4));
    
    panelDialogButtons = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    sizerFileProtectionsDialog->Add(panelDialogButtons, 0, wxLEFT|wxRIGHT|wxBOTTOM, WXC_FROM_DIP(4));
    
    wxBoxSizer* sizerDialogButtons = new wxBoxSizer(wxHORIZONTAL);
    panelDialogButtons->SetSizer(sizerDialogButtons);
    
    buttonCancel = new wxButton(panelDialogButtons, wxID_CANCEL, _("Cancel"), wxDefaultPosition, wxDLG_UNIT(panelDialogButtons, wxSize(-1,-1)), 0);
    
    sizerDialogButtons->Add(buttonCancel, 0, wxALL, WXC_FROM_DIP(4));
    
    buttonOk = new wxButton(panelDialogButtons, wxID_OK, _("Ok"), wxDefaultPosition, wxDLG_UNIT(panelDialogButtons, wxSize(-1,-1)), 0);
    
    sizerDialogButtons->Add(buttonOk, 0, wxALL, WXC_FROM_DIP(4));
    
    SetName(wxT("Ui_FileProtectionsDialog"));
    SetSize(wxDLG_UNIT(this, wxSize(-1,-1)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
}

Ui_FileProtectionsDialog::~Ui_FileProtectionsDialog()
{
}
